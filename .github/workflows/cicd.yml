name: Continuous Integration / Continuous Delivery

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
######## Continuous Integration
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set Up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      
      - name: Install Dependencies
        run: pip install -r src/requirements.txt

      - name: Test with pytest ### Unitests
        working-directory: src
        run: pytest tests.py

      - name: Check linting ### Quality test
        working-directory: src
        run: ruff check .

  SAST:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Bandit Version
        run: |
          pip install bandit==1.8.6
          bandit --version

      - name: Security Compliance using Bandit
        run: |
          bandit -r . -ll > bandit_output.txt 
          if grep -q "Severity: HIGH" bandit_output.txt; then
            echo "High severity issues found!"
            cat bandit_output.txt
            exit 1
          fi
          echo "Security matches the criteria"
  
  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          version: latest

      - name: Software Composition ANalysis
        run: |
          if [ -f src/requirements.txt ]; then
            trivy fs \
              --security-checks vuln \
              --vuln-type pip \
              --severity HIGH,CRITICAL \
              --exit-code 1 \
              --ignore-unfixed \
              src/
          else
            echo "No requirements.txt found"
            exit 1
          fi


  CD:
    needs: SCA
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/mariscurrena/calculadora-ci-cd:latest